package ru.gx.core.worker;

public interface WorkerSettingsContainer {
    /**
     * Настройка (в мс), которая определяет сколько можно ждать штатного завершения исполнителя во время stop().
     */
    int getWaitOnStopMs();

    /**
     * Настройка (в мс), которая определяет какую паузу надо выждать перед перезапуском после останова.
     */
    int getWaitOnRestartMs();

    /**
     * Минимальное время на итерацию. Если после выполнения итерации не требуется немедленно продолжить,
     * и время выполнения текущей итерации было менее указанного, то поток исполнителя засыпает.
     */
    int getMinTimePerIterationMs();

    /**
     * Определяющая настройка (в мс) период времени, в течение которого исполнитель обязан отчитаться о своей "жизни".
     * Если исполнитель не отчитается, то его требуется остановить (и при необходимости запустить снова).
     *
     * @see AbstractWorker#runnerIsLifeSet()
     * @see Worker#getLastRunnerLifeCheckedMs()
     */
    int getTimeoutRunnerLifeMs();

    /**
     * Как часто публиковать (выводить в консоль) статистику.
     */
    int getPrintStatisticsEveryMs();
}
